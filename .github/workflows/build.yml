name: Build and Test

on:
  push:
    branches: ["main"]
  workflow_dispatch:
  workflow_run:
    types:
      - "completed"
    workflows:
      - "Pull-request preflight"

env:
  CHECKOUT_REF: |
    ${{ 
      (github.event_name == 'workflow_run' && github.event.workflow_run.event == 'pull_request' 
        && github.event.workflow_run.head_sha) ||
      github.sha
    }}

jobs:
  get-team:
    runs-on: ubuntu-latest
    outputs:
      developers: |
        ${{ (github.actor != 'dependabot[bot]' && fromJSON(steps.get_devs.outputs.data).*.login) || 
        'dependabot[bot]' }}
    steps:
      - id: get_devs
        if: github.actor != 'dependabot[bot]'
        uses: octokit/request-action@v7e93b91076fad3920c29d44eb2a6311d929db3dd
        with:
          route: GET /orgs/{org}/teams/{team_slug}/members
          org: ForestAdmin
          team_slug: Developers
          role: all
          per_page: 50
        env:
          GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

  preflight:
    runs-on: ubuntu-latest
    needs: [get-team]
    steps:
      - if: |
          success() && contains(needs.get-team.outputs.developers, github.actor) && (
            github.event_name == 'workflow_dispatch' ||
            github.event_name == 'push' && github.ref == 'refs/heads/main' ||
            github.event_name == 'workflow_run'
          )
        run: exit 0
      - run: exit 1

  lint:
    name: Lint
    runs-on: ubuntu-latest
    needs: [preflight]
    steps:
      - name: Cancel previous running workflows
        uses: fkirc/skip-duplicate-actions@f75dd6564bb646f95277dc8c3b80612e46a4a1ea
      - uses: actions/checkout@v2.x
        with:
          ref: ${{ env.CHECKOUT_REF }}
          fetch-depth: 0
      - uses: actions/setup-node@v2.x
        with:
          node-version: 14.17.6
      - uses: actions/cache@v2.x
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: install dependencies
        run: yarn install --frozen-lockfile --non-interactive --production=false
      - name: Lint commit message
        uses: wagoid/commitlint-github-action@2d572ed5ea8b369af534fa21eea186a7eef07cda
      - name: lint Javascript
        run: yarn lint

  test:
    name: Test
    runs-on: ubuntu-latest
    needs: [lint]
    strategy:
      matrix:
        node: [10, 14]
        include:
          - node: 14
            withCoverage: ${{ true }}
    steps:
      - uses: actions/checkout@v2.x
        with:
          ref: ${{ env.CHECKOUT_REF }}
      - uses: actions/setup-node@v2.x
        with:
          node-version: ${{ matrix.node }}
      - name: Cache node_modules
        uses: actions/cache@v2.x
        with:
          path: "**/node_modules"
          key: ${{ runner.os }}-node_modules-${{ hashFiles('**/yarn.lock') }}
      - name: Login on dockerhub
        run: echo ${{ secrets.DOCKER_PASSWORD }} | docker login -u ${{ secrets.DOCKER_USERNAME }} --password-stdin
      - name: Start docker container
        run: docker-compose up -d; sleep 15
      - name: Test with Node ${{ matrix.node }}
        if: ${{ !matrix.withCoverage }}
        run: yarn test
      - name: Test with Node ${{ matrix.node }} & Send coverage
        uses: paambaati/codeclimate-action@84cea27117a473d605400ca3a97fcef7e433e2d6
        if: matrix.withCoverage && matrix.node == 14
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: yarn test:coverage
      - name: Test prepack
        run: yarn prepack
      - name: Test postpack
        run: yarn postpack
